# Adapted from:
# https://github.com/status-im/nim-codex/blob/main/.github/workflows/ci.yml

# delete me... another cache-tester comment

name: Testground
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cache_nonce: [ 2 ] # Allows for easily busting actions/cache caches
        target:
          - os: linux
            cpu: amd64
        nim_branch: [version-1-6]
        include:
          - target:
              os: linux
            builder: ubuntu-latest
            shell: bash --noprofile --norc -eo pipefail

    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
        working-directory: nim-codex

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }} (Nim ${{ matrix.nim_branch }})'
    runs-on: ${{ matrix.builder }}
    timeout-minutes: 80
    steps:
      - name: Checkout nim-codex sources
        uses: actions/checkout@v3
        with:
          path: nim-codex

      - name: Checkout Testground sources
        uses: actions/checkout@v3
        with:
          path: testground
          repository: testground/testground

      - name: APT (Linux amd64)
        if: runner.os == 'Linux' && matrix.target.cpu == 'amd64'
        run: |
          # sudo apt-fast update -qq
          # sudo DEBIAN_FRONTEND='noninteractive' apt-fast install \
          #   --no-install-recommends -yq ...

      - name: Derive environment variables
        run: |
          # Add executables built with Go to PATH
          echo "${HOME}/go/bin" >> ${GITHUB_PATH}

      - name: Calculate cache-key components
        id: calc-cache-key-components
        run: |
          echo "::set-output name=testground_commit::$(git rev-parse $(git branch --show-current))"
          echo "::set-output name=nim_image_digest::$(docker manifest inspect nimlang/nim:latest | jq '.config.digest' | awk -F'"' '{ print $2}')"
        working-directory: testground

      - name: Restore Testground resources from cache
        id: testground-reources-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
            ~/docker/saved-images
          key: ${{ matrix.target.os }}-${{ matrix.target.cpu }}-testground_commit-${{ steps.calc-cache-key-components.outputs.testground_commit }}-nim_image_digest-${{ steps.calc-cache-key-components.outputs.nim_image_digest }}-cache_nonce:${{ matrix.cache_nonce }}

      - name: Build Testground resources and save to cache
        if: steps.testground-reources-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p "${HOME}"/docker/saved-images
          make install
          docker save iptestground/sidecar:edge | gzip > "${HOME}/docker/saved-images/iptestground_sidecar_edge.tar.gz"
          docker save iptestground/sync-service:edge | gzip > "${HOME}/docker/saved-images/iptestground_sync-service_edge.tar.gz"
          docker save iptestground/testground:edge | gzip > "${HOME}/docker/saved-images/iptestground_testground_edge.tar.gz"
        working-directory: testground

      - name: Restore Testground resources from cache
        if: steps.testground-reources-cache.outputs.cache-hit == 'true'
        run: |
          docker load < "${HOME}/docker/saved-images/iptestground_sidecar_edge.tar.gz"
          docker load < "${HOME}/docker/saved-images/iptestground_sync-service_edge.tar.gz"
          docker load < "${HOME}/docker/saved-images/iptestground_testground_edge.tar.gz"
          docker load < "${HOME}/docker/saved-images/nimbase_latest.tar.gz"
          docker load < "${HOME}/docker/saved-images/bitnami_grafana_latest.tar.gz"
          docker load < "${HOME}/docker/saved-images/redis_latest.tar.gz"
          docker load < "${HOME}/docker/saved-images/influxdb_1.8.tar.gz"

      - name: Start Testground executable
        run: testground daemon &

      - name: Build and run a Codex Testground plan with custom options
        run: |
          make \
            TESTGROUND_PLAN=simple_libp2p \
            TESTGROUND_OPTIONS="--instances=10 --wait" \
            testground

      - name: Save additional Testground resources to cache
        if: steps.testground-reources-cache.outputs.cache-hit != 'true'
        run: |
          (docker ps -a -q | xargs docker kill &>/dev/null) || true ; (docker ps -a -q | xargs docker rm &>/dev/null) || true
          docker save nimbase:latest | gzip > "${HOME}/docker/saved-images/nimbase_latest.tar.gz"
          docker save bitnami/grafana:latest | gzip > "${HOME}/docker/saved-images/bitnami_grafana_latest.tar.gz"
          docker save redis:latest | gzip > "${HOME}/docker/saved-images/redis_latest.tar.gz"
          docker save influxdb:1.8 | gzip > "${HOME}/docker/saved-images/influxdb_1.8.tar.gz"
